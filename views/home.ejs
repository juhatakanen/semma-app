<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Semma App</title>
</head>
<body>
    <table id="myTable2">
    <tr>
        <th onclick="sortTable(0)">Nro.</th>
        <th onclick="sortTable(1)">Ruoka</th>
        <th onclick="sortTable(2)">Ravintola</th>
        <th onclick="sortTable(3)">Prot/100g</th>
        <th onclick="sortTable(4)">Kcal/100g</th>
        <th onclick="sortTable(5)">Kcal / 1g protein</th>
        <th onclick="sortTable(6)">Suolaa / 100g</th>
    </tr>
    <% let j = 1 %>
    <% for (let sortedMeal of sortedMealArray) { %>
        <tr>
            <td><%=j%></td>
            <td><%=sortedMeal.Name%></td>
            <td><%=sortedMeal.Restaurant%></td>
            <td><%=sortedMeal.Protein%> g</td>
            <td><%=sortedMeal.Kcal%> kcal</td>
            <td><%=sortedMeal.KcalPerProtein%> kcal/pro</td>
            <td><%=sortedMeal.Salt%> g</td>
        </tr>
        <% j++ %>
<% } %>
</table>
    <% let i = 0 %>
    <% for (let restaurantMenu of restaurantMenusArray) { %>
        <h1><%=restaurantObjectArray[i].name%></h1>
        <% i++ %>
        <% for (let restaurantMenu2 of restaurantMenu) { %>
            <h2><%=restaurantMenu2.Name%></h2>
            <% for (let restaurantMenu3 of restaurantMenu2.Meals) { %>
                <h3><%=restaurantMenu3.Name%></h3>
                <ul>
                    <li><%=restaurantMenu3.Protein%> g/100g proteiinia</li>
                    <li><%=restaurantMenu3.Kcal%> kcal/100g</li>
                    <li><%=restaurantMenu3.KcalPerProtein%> Kaloria per 1g proteiinia</li>
                </ul>
                <% } %>
            <% } %>
            ----------------------------------------------------------------------------------------------------------------------------------------------------------
        <% } %>
        <script>
            function sortTable(n) {
              var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
              table = document.getElementById("myTable2");
              switching = true;
              // Set the sorting direction to ascending:
              dir = "asc";
              /* Make a loop that will continue until
              no switching has been done: */
              while (switching) {
                // Start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /* Loop through all table rows (except the
                first, which contains table headers): */
                for (i = 1; i < (rows.length - 1); i++) {
                  // Start by saying there should be no switching:
                  shouldSwitch = false;
                  /* Get the two elements you want to compare,
                  one from current row and one from the next: */
                  x = rows[i].getElementsByTagName("TD")[n];
                  y = rows[i + 1].getElementsByTagName("TD")[n];
                  /* Check if the two rows should switch place,
                  based on the direction, asc or desc: */
                  if (n === 1 || n === 2) {
                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                        }
                    }
                 } else {
                        if (dir == "asc") {
                            if (parseFloat(x.innerHTML) > parseFloat(y.innerHTML)) {
                            shouldSwitch = true;
                            break;
                              }
                        } else if (dir == "desc") {
                            if (parseFloat(x.innerHTML) < parseFloat(y.innerHTML)) {
                            shouldSwitch = true;
                            break;
                            }
                    } 
                }
            }
                if (shouldSwitch) {
                  /* If a switch has been marked, make the switch
                  and mark that a switch has been done: */
                  rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                  switching = true;
                  // Each time a switch is done, increase this count by 1:
                  switchcount ++;
                } else {
                  /* If no switching has been done AND the direction is "asc",
                  set the direction to "desc" and run the while loop again. */
                  if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                  }
                }
              }
            }
            </script>
</body>
</html>